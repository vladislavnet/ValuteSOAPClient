//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Этот исходный текст был создан автоматически: Microsoft.VSDesigner, версия: 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace SOAPClient.ru.cbr.www {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DailyInfoSoap", Namespace="http://web.cbr.ru/")]
    public partial class DailyInfo : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SaldoXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback ROISfixXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback RuoniaXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback OstatDepoXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValIntDayXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValIntDayOperationCompleted;
        
        private System.Threading.SendOrPostCallback OstatDepoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ROISfixOperationCompleted;
        
        private System.Threading.SendOrPostCallback RuoniaOperationCompleted;
        
        private System.Threading.SendOrPostCallback mrrf7DOperationCompleted;
        
        private System.Threading.SendOrPostCallback mrrf7DXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback RepoDebtUSDOperationCompleted;
        
        private System.Threading.SendOrPostCallback RepoDebtUSDXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback mrrfOperationCompleted;
        
        private System.Threading.SendOrPostCallback mrrfXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaldoOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewsInfoXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback OmodInfoXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback XVolOperationCompleted;
        
        private System.Threading.SendOrPostCallback XVolXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback MainInfoXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback AllDataInfoXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewsInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SwapDayTotalOperationCompleted;
        
        private System.Threading.SendOrPostCallback SwapDayTotalXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback SwapDynamicXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback SwapInfoSellUSDVolXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback SwapInfoSellUSDVolOperationCompleted;
        
        private System.Threading.SendOrPostCallback SwapInfoSellUSDOperationCompleted;
        
        private System.Threading.SendOrPostCallback SwapInfoSellUSDXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback BiCurBaseXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback BiCurBaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback BiCurBacketXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback BiCurBacketOperationCompleted;
        
        private System.Threading.SendOrPostCallback SwapDynamicOperationCompleted;
        
        private System.Threading.SendOrPostCallback SwapMonthTotalOperationCompleted;
        
        private System.Threading.SendOrPostCallback SwapMonthTotalXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback MKROperationCompleted;
        
        private System.Threading.SendOrPostCallback MKRXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback KeyRateOperationCompleted;
        
        private System.Threading.SendOrPostCallback KeyRateXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback DVOperationCompleted;
        
        private System.Threading.SendOrPostCallback DVXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback Repo_debtOperationCompleted;
        
        private System.Threading.SendOrPostCallback Repo_debtXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback Coins_baseOperationCompleted;
        
        private System.Threading.SendOrPostCallback Coins_baseXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback FixingBaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback FixingBaseXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback OvernightOperationCompleted;
        
        private System.Threading.SendOrPostCallback OvernightXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback BauctionOperationCompleted;
        
        private System.Threading.SendOrPostCallback BauctionXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback DepoDynamicXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback DepoDynamicOperationCompleted;
        
        private System.Threading.SendOrPostCallback OstatDynamicXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback OstatDynamicOperationCompleted;
        
        private System.Threading.SendOrPostCallback DragMetDynamicXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback DragMetDynamicOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestDateTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestDateTimeSeldOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestDateSeldOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnumValutesXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnumValutesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestReutersDateTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnumReutersValutesXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnumReutersValutesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReutersCursOnDateXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReutersCursOnDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReutersCursDynamicXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReutersCursDynamicOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCursDynamicXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCursDynamicOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCursOnDateXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSeldCursOnDateXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSeldCursOnDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCursOnDateOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DailyInfo() {
            this.Url = global::SOAPClient.Properties.Settings.Default.SOAPClient_ru_cbr_www_DailyInfo;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SaldoXMLCompletedEventHandler SaldoXMLCompleted;
        
        /// <remarks/>
        public event ROISfixXMLCompletedEventHandler ROISfixXMLCompleted;
        
        /// <remarks/>
        public event RuoniaXMLCompletedEventHandler RuoniaXMLCompleted;
        
        /// <remarks/>
        public event OstatDepoXMLCompletedEventHandler OstatDepoXMLCompleted;
        
        /// <remarks/>
        public event ValIntDayXMLCompletedEventHandler ValIntDayXMLCompleted;
        
        /// <remarks/>
        public event ValIntDayCompletedEventHandler ValIntDayCompleted;
        
        /// <remarks/>
        public event OstatDepoCompletedEventHandler OstatDepoCompleted;
        
        /// <remarks/>
        public event ROISfixCompletedEventHandler ROISfixCompleted;
        
        /// <remarks/>
        public event RuoniaCompletedEventHandler RuoniaCompleted;
        
        /// <remarks/>
        public event mrrf7DCompletedEventHandler mrrf7DCompleted;
        
        /// <remarks/>
        public event mrrf7DXMLCompletedEventHandler mrrf7DXMLCompleted;
        
        /// <remarks/>
        public event RepoDebtUSDCompletedEventHandler RepoDebtUSDCompleted;
        
        /// <remarks/>
        public event RepoDebtUSDXMLCompletedEventHandler RepoDebtUSDXMLCompleted;
        
        /// <remarks/>
        public event mrrfCompletedEventHandler mrrfCompleted;
        
        /// <remarks/>
        public event mrrfXMLCompletedEventHandler mrrfXMLCompleted;
        
        /// <remarks/>
        public event SaldoCompletedEventHandler SaldoCompleted;
        
        /// <remarks/>
        public event NewsInfoXMLCompletedEventHandler NewsInfoXMLCompleted;
        
        /// <remarks/>
        public event OmodInfoXMLCompletedEventHandler OmodInfoXMLCompleted;
        
        /// <remarks/>
        public event XVolCompletedEventHandler XVolCompleted;
        
        /// <remarks/>
        public event XVolXMLCompletedEventHandler XVolXMLCompleted;
        
        /// <remarks/>
        public event MainInfoXMLCompletedEventHandler MainInfoXMLCompleted;
        
        /// <remarks/>
        public event AllDataInfoXMLCompletedEventHandler AllDataInfoXMLCompleted;
        
        /// <remarks/>
        public event NewsInfoCompletedEventHandler NewsInfoCompleted;
        
        /// <remarks/>
        public event SwapDayTotalCompletedEventHandler SwapDayTotalCompleted;
        
        /// <remarks/>
        public event SwapDayTotalXMLCompletedEventHandler SwapDayTotalXMLCompleted;
        
        /// <remarks/>
        public event SwapDynamicXMLCompletedEventHandler SwapDynamicXMLCompleted;
        
        /// <remarks/>
        public event SwapInfoSellUSDVolXMLCompletedEventHandler SwapInfoSellUSDVolXMLCompleted;
        
        /// <remarks/>
        public event SwapInfoSellUSDVolCompletedEventHandler SwapInfoSellUSDVolCompleted;
        
        /// <remarks/>
        public event SwapInfoSellUSDCompletedEventHandler SwapInfoSellUSDCompleted;
        
        /// <remarks/>
        public event SwapInfoSellUSDXMLCompletedEventHandler SwapInfoSellUSDXMLCompleted;
        
        /// <remarks/>
        public event BiCurBaseXMLCompletedEventHandler BiCurBaseXMLCompleted;
        
        /// <remarks/>
        public event BiCurBaseCompletedEventHandler BiCurBaseCompleted;
        
        /// <remarks/>
        public event BiCurBacketXMLCompletedEventHandler BiCurBacketXMLCompleted;
        
        /// <remarks/>
        public event BiCurBacketCompletedEventHandler BiCurBacketCompleted;
        
        /// <remarks/>
        public event SwapDynamicCompletedEventHandler SwapDynamicCompleted;
        
        /// <remarks/>
        public event SwapMonthTotalCompletedEventHandler SwapMonthTotalCompleted;
        
        /// <remarks/>
        public event SwapMonthTotalXMLCompletedEventHandler SwapMonthTotalXMLCompleted;
        
        /// <remarks/>
        public event MKRCompletedEventHandler MKRCompleted;
        
        /// <remarks/>
        public event MKRXMLCompletedEventHandler MKRXMLCompleted;
        
        /// <remarks/>
        public event KeyRateCompletedEventHandler KeyRateCompleted;
        
        /// <remarks/>
        public event KeyRateXMLCompletedEventHandler KeyRateXMLCompleted;
        
        /// <remarks/>
        public event DVCompletedEventHandler DVCompleted;
        
        /// <remarks/>
        public event DVXMLCompletedEventHandler DVXMLCompleted;
        
        /// <remarks/>
        public event Repo_debtCompletedEventHandler Repo_debtCompleted;
        
        /// <remarks/>
        public event Repo_debtXMLCompletedEventHandler Repo_debtXMLCompleted;
        
        /// <remarks/>
        public event Coins_baseCompletedEventHandler Coins_baseCompleted;
        
        /// <remarks/>
        public event Coins_baseXMLCompletedEventHandler Coins_baseXMLCompleted;
        
        /// <remarks/>
        public event FixingBaseCompletedEventHandler FixingBaseCompleted;
        
        /// <remarks/>
        public event FixingBaseXMLCompletedEventHandler FixingBaseXMLCompleted;
        
        /// <remarks/>
        public event OvernightCompletedEventHandler OvernightCompleted;
        
        /// <remarks/>
        public event OvernightXMLCompletedEventHandler OvernightXMLCompleted;
        
        /// <remarks/>
        public event BauctionCompletedEventHandler BauctionCompleted;
        
        /// <remarks/>
        public event BauctionXMLCompletedEventHandler BauctionXMLCompleted;
        
        /// <remarks/>
        public event DepoDynamicXMLCompletedEventHandler DepoDynamicXMLCompleted;
        
        /// <remarks/>
        public event DepoDynamicCompletedEventHandler DepoDynamicCompleted;
        
        /// <remarks/>
        public event OstatDynamicXMLCompletedEventHandler OstatDynamicXMLCompleted;
        
        /// <remarks/>
        public event OstatDynamicCompletedEventHandler OstatDynamicCompleted;
        
        /// <remarks/>
        public event DragMetDynamicXMLCompletedEventHandler DragMetDynamicXMLCompleted;
        
        /// <remarks/>
        public event DragMetDynamicCompletedEventHandler DragMetDynamicCompleted;
        
        /// <remarks/>
        public event GetLatestDateTimeCompletedEventHandler GetLatestDateTimeCompleted;
        
        /// <remarks/>
        public event GetLatestDateCompletedEventHandler GetLatestDateCompleted;
        
        /// <remarks/>
        public event GetLatestDateTimeSeldCompletedEventHandler GetLatestDateTimeSeldCompleted;
        
        /// <remarks/>
        public event GetLatestDateSeldCompletedEventHandler GetLatestDateSeldCompleted;
        
        /// <remarks/>
        public event EnumValutesXMLCompletedEventHandler EnumValutesXMLCompleted;
        
        /// <remarks/>
        public event EnumValutesCompletedEventHandler EnumValutesCompleted;
        
        /// <remarks/>
        public event GetLatestReutersDateTimeCompletedEventHandler GetLatestReutersDateTimeCompleted;
        
        /// <remarks/>
        public event EnumReutersValutesXMLCompletedEventHandler EnumReutersValutesXMLCompleted;
        
        /// <remarks/>
        public event EnumReutersValutesCompletedEventHandler EnumReutersValutesCompleted;
        
        /// <remarks/>
        public event GetReutersCursOnDateXMLCompletedEventHandler GetReutersCursOnDateXMLCompleted;
        
        /// <remarks/>
        public event GetReutersCursOnDateCompletedEventHandler GetReutersCursOnDateCompleted;
        
        /// <remarks/>
        public event GetReutersCursDynamicXMLCompletedEventHandler GetReutersCursDynamicXMLCompleted;
        
        /// <remarks/>
        public event GetReutersCursDynamicCompletedEventHandler GetReutersCursDynamicCompleted;
        
        /// <remarks/>
        public event GetCursDynamicXMLCompletedEventHandler GetCursDynamicXMLCompleted;
        
        /// <remarks/>
        public event GetCursDynamicCompletedEventHandler GetCursDynamicCompleted;
        
        /// <remarks/>
        public event GetCursOnDateXMLCompletedEventHandler GetCursOnDateXMLCompleted;
        
        /// <remarks/>
        public event GetSeldCursOnDateXMLCompletedEventHandler GetSeldCursOnDateXMLCompleted;
        
        /// <remarks/>
        public event GetSeldCursOnDateCompletedEventHandler GetSeldCursOnDateCompleted;
        
        /// <remarks/>
        public event GetCursOnDateCompletedEventHandler GetCursOnDateCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/SaldoXML", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SaldoXML(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("SaldoXML", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SaldoXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.SaldoXMLAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void SaldoXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.SaldoXMLOperationCompleted == null)) {
                this.SaldoXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaldoXMLOperationCompleted);
            }
            this.InvokeAsync("SaldoXML", new object[] {
                        fromDate,
                        ToDate}, this.SaldoXMLOperationCompleted, userState);
        }
        
        private void OnSaldoXMLOperationCompleted(object arg) {
            if ((this.SaldoXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaldoXMLCompleted(this, new SaldoXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/ROISfixXML", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ROISfixXML(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("ROISfixXML", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ROISfixXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.ROISfixXMLAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void ROISfixXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.ROISfixXMLOperationCompleted == null)) {
                this.ROISfixXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnROISfixXMLOperationCompleted);
            }
            this.InvokeAsync("ROISfixXML", new object[] {
                        fromDate,
                        ToDate}, this.ROISfixXMLOperationCompleted, userState);
        }
        
        private void OnROISfixXMLOperationCompleted(object arg) {
            if ((this.ROISfixXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ROISfixXMLCompleted(this, new ROISfixXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/RuoniaXML", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode RuoniaXML(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("RuoniaXML", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void RuoniaXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.RuoniaXMLAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void RuoniaXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.RuoniaXMLOperationCompleted == null)) {
                this.RuoniaXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRuoniaXMLOperationCompleted);
            }
            this.InvokeAsync("RuoniaXML", new object[] {
                        fromDate,
                        ToDate}, this.RuoniaXMLOperationCompleted, userState);
        }
        
        private void OnRuoniaXMLOperationCompleted(object arg) {
            if ((this.RuoniaXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RuoniaXMLCompleted(this, new RuoniaXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/OstatDepoXML", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode OstatDepoXML(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("OstatDepoXML", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void OstatDepoXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.OstatDepoXMLAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void OstatDepoXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.OstatDepoXMLOperationCompleted == null)) {
                this.OstatDepoXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOstatDepoXMLOperationCompleted);
            }
            this.InvokeAsync("OstatDepoXML", new object[] {
                        fromDate,
                        ToDate}, this.OstatDepoXMLOperationCompleted, userState);
        }
        
        private void OnOstatDepoXMLOperationCompleted(object arg) {
            if ((this.OstatDepoXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OstatDepoXMLCompleted(this, new OstatDepoXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/ValIntDayXML", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ValIntDayXML(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("ValIntDayXML", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ValIntDayXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.ValIntDayXMLAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void ValIntDayXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.ValIntDayXMLOperationCompleted == null)) {
                this.ValIntDayXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValIntDayXMLOperationCompleted);
            }
            this.InvokeAsync("ValIntDayXML", new object[] {
                        fromDate,
                        ToDate}, this.ValIntDayXMLOperationCompleted, userState);
        }
        
        private void OnValIntDayXMLOperationCompleted(object arg) {
            if ((this.ValIntDayXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValIntDayXMLCompleted(this, new ValIntDayXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/ValIntDay", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ValIntDay(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("ValIntDay", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ValIntDayAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.ValIntDayAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void ValIntDayAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.ValIntDayOperationCompleted == null)) {
                this.ValIntDayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValIntDayOperationCompleted);
            }
            this.InvokeAsync("ValIntDay", new object[] {
                        fromDate,
                        ToDate}, this.ValIntDayOperationCompleted, userState);
        }
        
        private void OnValIntDayOperationCompleted(object arg) {
            if ((this.ValIntDayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValIntDayCompleted(this, new ValIntDayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/OstatDepo", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet OstatDepo(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("OstatDepo", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void OstatDepoAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.OstatDepoAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void OstatDepoAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.OstatDepoOperationCompleted == null)) {
                this.OstatDepoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOstatDepoOperationCompleted);
            }
            this.InvokeAsync("OstatDepo", new object[] {
                        fromDate,
                        ToDate}, this.OstatDepoOperationCompleted, userState);
        }
        
        private void OnOstatDepoOperationCompleted(object arg) {
            if ((this.OstatDepoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OstatDepoCompleted(this, new OstatDepoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/ROISfix", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ROISfix(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("ROISfix", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ROISfixAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.ROISfixAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void ROISfixAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.ROISfixOperationCompleted == null)) {
                this.ROISfixOperationCompleted = new System.Threading.SendOrPostCallback(this.OnROISfixOperationCompleted);
            }
            this.InvokeAsync("ROISfix", new object[] {
                        fromDate,
                        ToDate}, this.ROISfixOperationCompleted, userState);
        }
        
        private void OnROISfixOperationCompleted(object arg) {
            if ((this.ROISfixCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ROISfixCompleted(this, new ROISfixCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/Ruonia", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Ruonia(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("Ruonia", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RuoniaAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.RuoniaAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void RuoniaAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.RuoniaOperationCompleted == null)) {
                this.RuoniaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRuoniaOperationCompleted);
            }
            this.InvokeAsync("Ruonia", new object[] {
                        fromDate,
                        ToDate}, this.RuoniaOperationCompleted, userState);
        }
        
        private void OnRuoniaOperationCompleted(object arg) {
            if ((this.RuoniaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RuoniaCompleted(this, new RuoniaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/mrrf7D", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet mrrf7D(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("mrrf7D", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void mrrf7DAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.mrrf7DAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void mrrf7DAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.mrrf7DOperationCompleted == null)) {
                this.mrrf7DOperationCompleted = new System.Threading.SendOrPostCallback(this.Onmrrf7DOperationCompleted);
            }
            this.InvokeAsync("mrrf7D", new object[] {
                        fromDate,
                        ToDate}, this.mrrf7DOperationCompleted, userState);
        }
        
        private void Onmrrf7DOperationCompleted(object arg) {
            if ((this.mrrf7DCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mrrf7DCompleted(this, new mrrf7DCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/mrrf7DXML", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode mrrf7DXML(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("mrrf7DXML", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void mrrf7DXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.mrrf7DXMLAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void mrrf7DXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.mrrf7DXMLOperationCompleted == null)) {
                this.mrrf7DXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.Onmrrf7DXMLOperationCompleted);
            }
            this.InvokeAsync("mrrf7DXML", new object[] {
                        fromDate,
                        ToDate}, this.mrrf7DXMLOperationCompleted, userState);
        }
        
        private void Onmrrf7DXMLOperationCompleted(object arg) {
            if ((this.mrrf7DXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mrrf7DXMLCompleted(this, new mrrf7DXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/RepoDebtUSD", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RepoDebtUSD(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("RepoDebtUSD", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RepoDebtUSDAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.RepoDebtUSDAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void RepoDebtUSDAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.RepoDebtUSDOperationCompleted == null)) {
                this.RepoDebtUSDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRepoDebtUSDOperationCompleted);
            }
            this.InvokeAsync("RepoDebtUSD", new object[] {
                        fromDate,
                        ToDate}, this.RepoDebtUSDOperationCompleted, userState);
        }
        
        private void OnRepoDebtUSDOperationCompleted(object arg) {
            if ((this.RepoDebtUSDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RepoDebtUSDCompleted(this, new RepoDebtUSDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/RepoDebtUSDXML", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode RepoDebtUSDXML(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("RepoDebtUSDXML", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void RepoDebtUSDXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.RepoDebtUSDXMLAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void RepoDebtUSDXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.RepoDebtUSDXMLOperationCompleted == null)) {
                this.RepoDebtUSDXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRepoDebtUSDXMLOperationCompleted);
            }
            this.InvokeAsync("RepoDebtUSDXML", new object[] {
                        fromDate,
                        ToDate}, this.RepoDebtUSDXMLOperationCompleted, userState);
        }
        
        private void OnRepoDebtUSDXMLOperationCompleted(object arg) {
            if ((this.RepoDebtUSDXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RepoDebtUSDXMLCompleted(this, new RepoDebtUSDXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/mrrf", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet mrrf(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("mrrf", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void mrrfAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.mrrfAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void mrrfAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.mrrfOperationCompleted == null)) {
                this.mrrfOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmrrfOperationCompleted);
            }
            this.InvokeAsync("mrrf", new object[] {
                        fromDate,
                        ToDate}, this.mrrfOperationCompleted, userState);
        }
        
        private void OnmrrfOperationCompleted(object arg) {
            if ((this.mrrfCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mrrfCompleted(this, new mrrfCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/mrrfXML", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode mrrfXML(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("mrrfXML", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void mrrfXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.mrrfXMLAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void mrrfXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.mrrfXMLOperationCompleted == null)) {
                this.mrrfXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmrrfXMLOperationCompleted);
            }
            this.InvokeAsync("mrrfXML", new object[] {
                        fromDate,
                        ToDate}, this.mrrfXMLOperationCompleted, userState);
        }
        
        private void OnmrrfXMLOperationCompleted(object arg) {
            if ((this.mrrfXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mrrfXMLCompleted(this, new mrrfXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/Saldo", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Saldo(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("Saldo", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SaldoAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.SaldoAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void SaldoAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.SaldoOperationCompleted == null)) {
                this.SaldoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaldoOperationCompleted);
            }
            this.InvokeAsync("Saldo", new object[] {
                        fromDate,
                        ToDate}, this.SaldoOperationCompleted, userState);
        }
        
        private void OnSaldoOperationCompleted(object arg) {
            if ((this.SaldoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaldoCompleted(this, new SaldoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/NewsInfoXML", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode NewsInfoXML(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("NewsInfoXML", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void NewsInfoXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.NewsInfoXMLAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void NewsInfoXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.NewsInfoXMLOperationCompleted == null)) {
                this.NewsInfoXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewsInfoXMLOperationCompleted);
            }
            this.InvokeAsync("NewsInfoXML", new object[] {
                        fromDate,
                        ToDate}, this.NewsInfoXMLOperationCompleted, userState);
        }
        
        private void OnNewsInfoXMLOperationCompleted(object arg) {
            if ((this.NewsInfoXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewsInfoXMLCompleted(this, new NewsInfoXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/OmodInfoXML", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode OmodInfoXML() {
            object[] results = this.Invoke("OmodInfoXML", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void OmodInfoXMLAsync() {
            this.OmodInfoXMLAsync(null);
        }
        
        /// <remarks/>
        public void OmodInfoXMLAsync(object userState) {
            if ((this.OmodInfoXMLOperationCompleted == null)) {
                this.OmodInfoXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOmodInfoXMLOperationCompleted);
            }
            this.InvokeAsync("OmodInfoXML", new object[0], this.OmodInfoXMLOperationCompleted, userState);
        }
        
        private void OnOmodInfoXMLOperationCompleted(object arg) {
            if ((this.OmodInfoXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OmodInfoXMLCompleted(this, new OmodInfoXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/XVol", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet XVol(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("XVol", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void XVolAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.XVolAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void XVolAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.XVolOperationCompleted == null)) {
                this.XVolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnXVolOperationCompleted);
            }
            this.InvokeAsync("XVol", new object[] {
                        fromDate,
                        ToDate}, this.XVolOperationCompleted, userState);
        }
        
        private void OnXVolOperationCompleted(object arg) {
            if ((this.XVolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.XVolCompleted(this, new XVolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/XVolXML", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode XVolXML(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("XVolXML", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void XVolXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.XVolXMLAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void XVolXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.XVolXMLOperationCompleted == null)) {
                this.XVolXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnXVolXMLOperationCompleted);
            }
            this.InvokeAsync("XVolXML", new object[] {
                        fromDate,
                        ToDate}, this.XVolXMLOperationCompleted, userState);
        }
        
        private void OnXVolXMLOperationCompleted(object arg) {
            if ((this.XVolXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.XVolXMLCompleted(this, new XVolXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/MainInfoXML", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode MainInfoXML() {
            object[] results = this.Invoke("MainInfoXML", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void MainInfoXMLAsync() {
            this.MainInfoXMLAsync(null);
        }
        
        /// <remarks/>
        public void MainInfoXMLAsync(object userState) {
            if ((this.MainInfoXMLOperationCompleted == null)) {
                this.MainInfoXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMainInfoXMLOperationCompleted);
            }
            this.InvokeAsync("MainInfoXML", new object[0], this.MainInfoXMLOperationCompleted, userState);
        }
        
        private void OnMainInfoXMLOperationCompleted(object arg) {
            if ((this.MainInfoXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MainInfoXMLCompleted(this, new MainInfoXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/AllDataInfoXML", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AllDataInfoXML() {
            object[] results = this.Invoke("AllDataInfoXML", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AllDataInfoXMLAsync() {
            this.AllDataInfoXMLAsync(null);
        }
        
        /// <remarks/>
        public void AllDataInfoXMLAsync(object userState) {
            if ((this.AllDataInfoXMLOperationCompleted == null)) {
                this.AllDataInfoXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAllDataInfoXMLOperationCompleted);
            }
            this.InvokeAsync("AllDataInfoXML", new object[0], this.AllDataInfoXMLOperationCompleted, userState);
        }
        
        private void OnAllDataInfoXMLOperationCompleted(object arg) {
            if ((this.AllDataInfoXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AllDataInfoXMLCompleted(this, new AllDataInfoXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/NewsInfo", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet NewsInfo(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("NewsInfo", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void NewsInfoAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.NewsInfoAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void NewsInfoAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.NewsInfoOperationCompleted == null)) {
                this.NewsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewsInfoOperationCompleted);
            }
            this.InvokeAsync("NewsInfo", new object[] {
                        fromDate,
                        ToDate}, this.NewsInfoOperationCompleted, userState);
        }
        
        private void OnNewsInfoOperationCompleted(object arg) {
            if ((this.NewsInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewsInfoCompleted(this, new NewsInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/SwapDayTotal", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SwapDayTotal(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("SwapDayTotal", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SwapDayTotalAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.SwapDayTotalAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void SwapDayTotalAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.SwapDayTotalOperationCompleted == null)) {
                this.SwapDayTotalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSwapDayTotalOperationCompleted);
            }
            this.InvokeAsync("SwapDayTotal", new object[] {
                        fromDate,
                        ToDate}, this.SwapDayTotalOperationCompleted, userState);
        }
        
        private void OnSwapDayTotalOperationCompleted(object arg) {
            if ((this.SwapDayTotalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SwapDayTotalCompleted(this, new SwapDayTotalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/SwapDayTotalXML", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SwapDayTotalXML(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("SwapDayTotalXML", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SwapDayTotalXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.SwapDayTotalXMLAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void SwapDayTotalXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.SwapDayTotalXMLOperationCompleted == null)) {
                this.SwapDayTotalXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSwapDayTotalXMLOperationCompleted);
            }
            this.InvokeAsync("SwapDayTotalXML", new object[] {
                        fromDate,
                        ToDate}, this.SwapDayTotalXMLOperationCompleted, userState);
        }
        
        private void OnSwapDayTotalXMLOperationCompleted(object arg) {
            if ((this.SwapDayTotalXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SwapDayTotalXMLCompleted(this, new SwapDayTotalXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/SwapDynamicXML", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SwapDynamicXML(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("SwapDynamicXML", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SwapDynamicXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.SwapDynamicXMLAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void SwapDynamicXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.SwapDynamicXMLOperationCompleted == null)) {
                this.SwapDynamicXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSwapDynamicXMLOperationCompleted);
            }
            this.InvokeAsync("SwapDynamicXML", new object[] {
                        fromDate,
                        ToDate}, this.SwapDynamicXMLOperationCompleted, userState);
        }
        
        private void OnSwapDynamicXMLOperationCompleted(object arg) {
            if ((this.SwapDynamicXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SwapDynamicXMLCompleted(this, new SwapDynamicXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/SwapInfoSellUSDVolXML", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SwapInfoSellUSDVolXML(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("SwapInfoSellUSDVolXML", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SwapInfoSellUSDVolXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.SwapInfoSellUSDVolXMLAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void SwapInfoSellUSDVolXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.SwapInfoSellUSDVolXMLOperationCompleted == null)) {
                this.SwapInfoSellUSDVolXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSwapInfoSellUSDVolXMLOperationCompleted);
            }
            this.InvokeAsync("SwapInfoSellUSDVolXML", new object[] {
                        fromDate,
                        ToDate}, this.SwapInfoSellUSDVolXMLOperationCompleted, userState);
        }
        
        private void OnSwapInfoSellUSDVolXMLOperationCompleted(object arg) {
            if ((this.SwapInfoSellUSDVolXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SwapInfoSellUSDVolXMLCompleted(this, new SwapInfoSellUSDVolXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/SwapInfoSellUSDVol", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SwapInfoSellUSDVol(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("SwapInfoSellUSDVol", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SwapInfoSellUSDVolAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.SwapInfoSellUSDVolAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void SwapInfoSellUSDVolAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.SwapInfoSellUSDVolOperationCompleted == null)) {
                this.SwapInfoSellUSDVolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSwapInfoSellUSDVolOperationCompleted);
            }
            this.InvokeAsync("SwapInfoSellUSDVol", new object[] {
                        fromDate,
                        ToDate}, this.SwapInfoSellUSDVolOperationCompleted, userState);
        }
        
        private void OnSwapInfoSellUSDVolOperationCompleted(object arg) {
            if ((this.SwapInfoSellUSDVolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SwapInfoSellUSDVolCompleted(this, new SwapInfoSellUSDVolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/SwapInfoSellUSD", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SwapInfoSellUSD(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("SwapInfoSellUSD", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SwapInfoSellUSDAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.SwapInfoSellUSDAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void SwapInfoSellUSDAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.SwapInfoSellUSDOperationCompleted == null)) {
                this.SwapInfoSellUSDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSwapInfoSellUSDOperationCompleted);
            }
            this.InvokeAsync("SwapInfoSellUSD", new object[] {
                        fromDate,
                        ToDate}, this.SwapInfoSellUSDOperationCompleted, userState);
        }
        
        private void OnSwapInfoSellUSDOperationCompleted(object arg) {
            if ((this.SwapInfoSellUSDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SwapInfoSellUSDCompleted(this, new SwapInfoSellUSDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/SwapInfoSellUSDXML", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SwapInfoSellUSDXML(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("SwapInfoSellUSDXML", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SwapInfoSellUSDXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.SwapInfoSellUSDXMLAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void SwapInfoSellUSDXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.SwapInfoSellUSDXMLOperationCompleted == null)) {
                this.SwapInfoSellUSDXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSwapInfoSellUSDXMLOperationCompleted);
            }
            this.InvokeAsync("SwapInfoSellUSDXML", new object[] {
                        fromDate,
                        ToDate}, this.SwapInfoSellUSDXMLOperationCompleted, userState);
        }
        
        private void OnSwapInfoSellUSDXMLOperationCompleted(object arg) {
            if ((this.SwapInfoSellUSDXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SwapInfoSellUSDXMLCompleted(this, new SwapInfoSellUSDXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/BiCurBaseXML", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode BiCurBaseXML(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("BiCurBaseXML", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void BiCurBaseXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.BiCurBaseXMLAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void BiCurBaseXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.BiCurBaseXMLOperationCompleted == null)) {
                this.BiCurBaseXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBiCurBaseXMLOperationCompleted);
            }
            this.InvokeAsync("BiCurBaseXML", new object[] {
                        fromDate,
                        ToDate}, this.BiCurBaseXMLOperationCompleted, userState);
        }
        
        private void OnBiCurBaseXMLOperationCompleted(object arg) {
            if ((this.BiCurBaseXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BiCurBaseXMLCompleted(this, new BiCurBaseXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/BiCurBase", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet BiCurBase(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("BiCurBase", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void BiCurBaseAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.BiCurBaseAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void BiCurBaseAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.BiCurBaseOperationCompleted == null)) {
                this.BiCurBaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBiCurBaseOperationCompleted);
            }
            this.InvokeAsync("BiCurBase", new object[] {
                        fromDate,
                        ToDate}, this.BiCurBaseOperationCompleted, userState);
        }
        
        private void OnBiCurBaseOperationCompleted(object arg) {
            if ((this.BiCurBaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BiCurBaseCompleted(this, new BiCurBaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/BiCurBacketXML", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode BiCurBacketXML() {
            object[] results = this.Invoke("BiCurBacketXML", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void BiCurBacketXMLAsync() {
            this.BiCurBacketXMLAsync(null);
        }
        
        /// <remarks/>
        public void BiCurBacketXMLAsync(object userState) {
            if ((this.BiCurBacketXMLOperationCompleted == null)) {
                this.BiCurBacketXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBiCurBacketXMLOperationCompleted);
            }
            this.InvokeAsync("BiCurBacketXML", new object[0], this.BiCurBacketXMLOperationCompleted, userState);
        }
        
        private void OnBiCurBacketXMLOperationCompleted(object arg) {
            if ((this.BiCurBacketXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BiCurBacketXMLCompleted(this, new BiCurBacketXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/BiCurBacket", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet BiCurBacket() {
            object[] results = this.Invoke("BiCurBacket", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void BiCurBacketAsync() {
            this.BiCurBacketAsync(null);
        }
        
        /// <remarks/>
        public void BiCurBacketAsync(object userState) {
            if ((this.BiCurBacketOperationCompleted == null)) {
                this.BiCurBacketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBiCurBacketOperationCompleted);
            }
            this.InvokeAsync("BiCurBacket", new object[0], this.BiCurBacketOperationCompleted, userState);
        }
        
        private void OnBiCurBacketOperationCompleted(object arg) {
            if ((this.BiCurBacketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BiCurBacketCompleted(this, new BiCurBacketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/SwapDynamic", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SwapDynamic(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("SwapDynamic", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SwapDynamicAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.SwapDynamicAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void SwapDynamicAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.SwapDynamicOperationCompleted == null)) {
                this.SwapDynamicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSwapDynamicOperationCompleted);
            }
            this.InvokeAsync("SwapDynamic", new object[] {
                        fromDate,
                        ToDate}, this.SwapDynamicOperationCompleted, userState);
        }
        
        private void OnSwapDynamicOperationCompleted(object arg) {
            if ((this.SwapDynamicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SwapDynamicCompleted(this, new SwapDynamicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/SwapMonthTotal", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SwapMonthTotal(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("SwapMonthTotal", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SwapMonthTotalAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.SwapMonthTotalAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void SwapMonthTotalAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.SwapMonthTotalOperationCompleted == null)) {
                this.SwapMonthTotalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSwapMonthTotalOperationCompleted);
            }
            this.InvokeAsync("SwapMonthTotal", new object[] {
                        fromDate,
                        ToDate}, this.SwapMonthTotalOperationCompleted, userState);
        }
        
        private void OnSwapMonthTotalOperationCompleted(object arg) {
            if ((this.SwapMonthTotalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SwapMonthTotalCompleted(this, new SwapMonthTotalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/SwapMonthTotalXML", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SwapMonthTotalXML(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("SwapMonthTotalXML", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SwapMonthTotalXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.SwapMonthTotalXMLAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void SwapMonthTotalXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.SwapMonthTotalXMLOperationCompleted == null)) {
                this.SwapMonthTotalXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSwapMonthTotalXMLOperationCompleted);
            }
            this.InvokeAsync("SwapMonthTotalXML", new object[] {
                        fromDate,
                        ToDate}, this.SwapMonthTotalXMLOperationCompleted, userState);
        }
        
        private void OnSwapMonthTotalXMLOperationCompleted(object arg) {
            if ((this.SwapMonthTotalXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SwapMonthTotalXMLCompleted(this, new SwapMonthTotalXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/MKR", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet MKR(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("MKR", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void MKRAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.MKRAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void MKRAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.MKROperationCompleted == null)) {
                this.MKROperationCompleted = new System.Threading.SendOrPostCallback(this.OnMKROperationCompleted);
            }
            this.InvokeAsync("MKR", new object[] {
                        fromDate,
                        ToDate}, this.MKROperationCompleted, userState);
        }
        
        private void OnMKROperationCompleted(object arg) {
            if ((this.MKRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MKRCompleted(this, new MKRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/MKRXML", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode MKRXML(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("MKRXML", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void MKRXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.MKRXMLAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void MKRXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.MKRXMLOperationCompleted == null)) {
                this.MKRXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMKRXMLOperationCompleted);
            }
            this.InvokeAsync("MKRXML", new object[] {
                        fromDate,
                        ToDate}, this.MKRXMLOperationCompleted, userState);
        }
        
        private void OnMKRXMLOperationCompleted(object arg) {
            if ((this.MKRXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MKRXMLCompleted(this, new MKRXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/KeyRate", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet KeyRate(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("KeyRate", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void KeyRateAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.KeyRateAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void KeyRateAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.KeyRateOperationCompleted == null)) {
                this.KeyRateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnKeyRateOperationCompleted);
            }
            this.InvokeAsync("KeyRate", new object[] {
                        fromDate,
                        ToDate}, this.KeyRateOperationCompleted, userState);
        }
        
        private void OnKeyRateOperationCompleted(object arg) {
            if ((this.KeyRateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.KeyRateCompleted(this, new KeyRateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/KeyRateXML", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode KeyRateXML(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("KeyRateXML", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void KeyRateXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.KeyRateXMLAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void KeyRateXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.KeyRateXMLOperationCompleted == null)) {
                this.KeyRateXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnKeyRateXMLOperationCompleted);
            }
            this.InvokeAsync("KeyRateXML", new object[] {
                        fromDate,
                        ToDate}, this.KeyRateXMLOperationCompleted, userState);
        }
        
        private void OnKeyRateXMLOperationCompleted(object arg) {
            if ((this.KeyRateXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.KeyRateXMLCompleted(this, new KeyRateXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/DV", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet DV(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("DV", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void DVAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.DVAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void DVAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.DVOperationCompleted == null)) {
                this.DVOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDVOperationCompleted);
            }
            this.InvokeAsync("DV", new object[] {
                        fromDate,
                        ToDate}, this.DVOperationCompleted, userState);
        }
        
        private void OnDVOperationCompleted(object arg) {
            if ((this.DVCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DVCompleted(this, new DVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/DVXML", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode DVXML(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("DVXML", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void DVXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.DVXMLAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void DVXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.DVXMLOperationCompleted == null)) {
                this.DVXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDVXMLOperationCompleted);
            }
            this.InvokeAsync("DVXML", new object[] {
                        fromDate,
                        ToDate}, this.DVXMLOperationCompleted, userState);
        }
        
        private void OnDVXMLOperationCompleted(object arg) {
            if ((this.DVXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DVXMLCompleted(this, new DVXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/Repo_debt", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Repo_debt(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("Repo_debt", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Repo_debtAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.Repo_debtAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void Repo_debtAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.Repo_debtOperationCompleted == null)) {
                this.Repo_debtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRepo_debtOperationCompleted);
            }
            this.InvokeAsync("Repo_debt", new object[] {
                        fromDate,
                        ToDate}, this.Repo_debtOperationCompleted, userState);
        }
        
        private void OnRepo_debtOperationCompleted(object arg) {
            if ((this.Repo_debtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Repo_debtCompleted(this, new Repo_debtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/Repo_debtXML", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode Repo_debtXML(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("Repo_debtXML", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void Repo_debtXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.Repo_debtXMLAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void Repo_debtXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.Repo_debtXMLOperationCompleted == null)) {
                this.Repo_debtXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRepo_debtXMLOperationCompleted);
            }
            this.InvokeAsync("Repo_debtXML", new object[] {
                        fromDate,
                        ToDate}, this.Repo_debtXMLOperationCompleted, userState);
        }
        
        private void OnRepo_debtXMLOperationCompleted(object arg) {
            if ((this.Repo_debtXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Repo_debtXMLCompleted(this, new Repo_debtXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/Coins_base", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Coins_base(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("Coins_base", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Coins_baseAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.Coins_baseAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void Coins_baseAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.Coins_baseOperationCompleted == null)) {
                this.Coins_baseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCoins_baseOperationCompleted);
            }
            this.InvokeAsync("Coins_base", new object[] {
                        fromDate,
                        ToDate}, this.Coins_baseOperationCompleted, userState);
        }
        
        private void OnCoins_baseOperationCompleted(object arg) {
            if ((this.Coins_baseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Coins_baseCompleted(this, new Coins_baseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/Coins_baseXML", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode Coins_baseXML(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("Coins_baseXML", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void Coins_baseXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.Coins_baseXMLAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void Coins_baseXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.Coins_baseXMLOperationCompleted == null)) {
                this.Coins_baseXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCoins_baseXMLOperationCompleted);
            }
            this.InvokeAsync("Coins_baseXML", new object[] {
                        fromDate,
                        ToDate}, this.Coins_baseXMLOperationCompleted, userState);
        }
        
        private void OnCoins_baseXMLOperationCompleted(object arg) {
            if ((this.Coins_baseXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Coins_baseXMLCompleted(this, new Coins_baseXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/FixingBase", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet FixingBase(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("FixingBase", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void FixingBaseAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.FixingBaseAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void FixingBaseAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.FixingBaseOperationCompleted == null)) {
                this.FixingBaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFixingBaseOperationCompleted);
            }
            this.InvokeAsync("FixingBase", new object[] {
                        fromDate,
                        ToDate}, this.FixingBaseOperationCompleted, userState);
        }
        
        private void OnFixingBaseOperationCompleted(object arg) {
            if ((this.FixingBaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FixingBaseCompleted(this, new FixingBaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/FixingBaseXML", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode FixingBaseXML(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("FixingBaseXML", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void FixingBaseXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.FixingBaseXMLAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void FixingBaseXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.FixingBaseXMLOperationCompleted == null)) {
                this.FixingBaseXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFixingBaseXMLOperationCompleted);
            }
            this.InvokeAsync("FixingBaseXML", new object[] {
                        fromDate,
                        ToDate}, this.FixingBaseXMLOperationCompleted, userState);
        }
        
        private void OnFixingBaseXMLOperationCompleted(object arg) {
            if ((this.FixingBaseXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FixingBaseXMLCompleted(this, new FixingBaseXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/Overnight", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Overnight(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("Overnight", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void OvernightAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.OvernightAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void OvernightAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.OvernightOperationCompleted == null)) {
                this.OvernightOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOvernightOperationCompleted);
            }
            this.InvokeAsync("Overnight", new object[] {
                        fromDate,
                        ToDate}, this.OvernightOperationCompleted, userState);
        }
        
        private void OnOvernightOperationCompleted(object arg) {
            if ((this.OvernightCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OvernightCompleted(this, new OvernightCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/OvernightXML", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode OvernightXML(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("OvernightXML", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void OvernightXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.OvernightXMLAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void OvernightXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.OvernightXMLOperationCompleted == null)) {
                this.OvernightXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOvernightXMLOperationCompleted);
            }
            this.InvokeAsync("OvernightXML", new object[] {
                        fromDate,
                        ToDate}, this.OvernightXMLOperationCompleted, userState);
        }
        
        private void OnOvernightXMLOperationCompleted(object arg) {
            if ((this.OvernightXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OvernightXMLCompleted(this, new OvernightXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/Bauction", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Bauction(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("Bauction", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void BauctionAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.BauctionAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void BauctionAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.BauctionOperationCompleted == null)) {
                this.BauctionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBauctionOperationCompleted);
            }
            this.InvokeAsync("Bauction", new object[] {
                        fromDate,
                        ToDate}, this.BauctionOperationCompleted, userState);
        }
        
        private void OnBauctionOperationCompleted(object arg) {
            if ((this.BauctionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BauctionCompleted(this, new BauctionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/BauctionXML", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode BauctionXML(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("BauctionXML", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void BauctionXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.BauctionXMLAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void BauctionXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.BauctionXMLOperationCompleted == null)) {
                this.BauctionXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBauctionXMLOperationCompleted);
            }
            this.InvokeAsync("BauctionXML", new object[] {
                        fromDate,
                        ToDate}, this.BauctionXMLOperationCompleted, userState);
        }
        
        private void OnBauctionXMLOperationCompleted(object arg) {
            if ((this.BauctionXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BauctionXMLCompleted(this, new BauctionXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/DepoDynamicXML", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode DepoDynamicXML(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("DepoDynamicXML", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void DepoDynamicXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.DepoDynamicXMLAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void DepoDynamicXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.DepoDynamicXMLOperationCompleted == null)) {
                this.DepoDynamicXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDepoDynamicXMLOperationCompleted);
            }
            this.InvokeAsync("DepoDynamicXML", new object[] {
                        fromDate,
                        ToDate}, this.DepoDynamicXMLOperationCompleted, userState);
        }
        
        private void OnDepoDynamicXMLOperationCompleted(object arg) {
            if ((this.DepoDynamicXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DepoDynamicXMLCompleted(this, new DepoDynamicXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/DepoDynamic", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet DepoDynamic(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("DepoDynamic", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void DepoDynamicAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.DepoDynamicAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void DepoDynamicAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.DepoDynamicOperationCompleted == null)) {
                this.DepoDynamicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDepoDynamicOperationCompleted);
            }
            this.InvokeAsync("DepoDynamic", new object[] {
                        fromDate,
                        ToDate}, this.DepoDynamicOperationCompleted, userState);
        }
        
        private void OnDepoDynamicOperationCompleted(object arg) {
            if ((this.DepoDynamicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DepoDynamicCompleted(this, new DepoDynamicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/OstatDynamicXML", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode OstatDynamicXML(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("OstatDynamicXML", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void OstatDynamicXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.OstatDynamicXMLAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void OstatDynamicXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.OstatDynamicXMLOperationCompleted == null)) {
                this.OstatDynamicXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOstatDynamicXMLOperationCompleted);
            }
            this.InvokeAsync("OstatDynamicXML", new object[] {
                        fromDate,
                        ToDate}, this.OstatDynamicXMLOperationCompleted, userState);
        }
        
        private void OnOstatDynamicXMLOperationCompleted(object arg) {
            if ((this.OstatDynamicXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OstatDynamicXMLCompleted(this, new OstatDynamicXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/OstatDynamic", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet OstatDynamic(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("OstatDynamic", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void OstatDynamicAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.OstatDynamicAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void OstatDynamicAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.OstatDynamicOperationCompleted == null)) {
                this.OstatDynamicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOstatDynamicOperationCompleted);
            }
            this.InvokeAsync("OstatDynamic", new object[] {
                        fromDate,
                        ToDate}, this.OstatDynamicOperationCompleted, userState);
        }
        
        private void OnOstatDynamicOperationCompleted(object arg) {
            if ((this.OstatDynamicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OstatDynamicCompleted(this, new OstatDynamicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/DragMetDynamicXML", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode DragMetDynamicXML(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("DragMetDynamicXML", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void DragMetDynamicXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.DragMetDynamicXMLAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void DragMetDynamicXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.DragMetDynamicXMLOperationCompleted == null)) {
                this.DragMetDynamicXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDragMetDynamicXMLOperationCompleted);
            }
            this.InvokeAsync("DragMetDynamicXML", new object[] {
                        fromDate,
                        ToDate}, this.DragMetDynamicXMLOperationCompleted, userState);
        }
        
        private void OnDragMetDynamicXMLOperationCompleted(object arg) {
            if ((this.DragMetDynamicXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DragMetDynamicXMLCompleted(this, new DragMetDynamicXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/DragMetDynamic", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet DragMetDynamic(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("DragMetDynamic", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void DragMetDynamicAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.DragMetDynamicAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void DragMetDynamicAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.DragMetDynamicOperationCompleted == null)) {
                this.DragMetDynamicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDragMetDynamicOperationCompleted);
            }
            this.InvokeAsync("DragMetDynamic", new object[] {
                        fromDate,
                        ToDate}, this.DragMetDynamicOperationCompleted, userState);
        }
        
        private void OnDragMetDynamicOperationCompleted(object arg) {
            if ((this.DragMetDynamicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DragMetDynamicCompleted(this, new DragMetDynamicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/GetLatestDateTime", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime GetLatestDateTime() {
            object[] results = this.Invoke("GetLatestDateTime", new object[0]);
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestDateTimeAsync() {
            this.GetLatestDateTimeAsync(null);
        }
        
        /// <remarks/>
        public void GetLatestDateTimeAsync(object userState) {
            if ((this.GetLatestDateTimeOperationCompleted == null)) {
                this.GetLatestDateTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestDateTimeOperationCompleted);
            }
            this.InvokeAsync("GetLatestDateTime", new object[0], this.GetLatestDateTimeOperationCompleted, userState);
        }
        
        private void OnGetLatestDateTimeOperationCompleted(object arg) {
            if ((this.GetLatestDateTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestDateTimeCompleted(this, new GetLatestDateTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/GetLatestDate", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLatestDate() {
            object[] results = this.Invoke("GetLatestDate", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestDateAsync() {
            this.GetLatestDateAsync(null);
        }
        
        /// <remarks/>
        public void GetLatestDateAsync(object userState) {
            if ((this.GetLatestDateOperationCompleted == null)) {
                this.GetLatestDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestDateOperationCompleted);
            }
            this.InvokeAsync("GetLatestDate", new object[0], this.GetLatestDateOperationCompleted, userState);
        }
        
        private void OnGetLatestDateOperationCompleted(object arg) {
            if ((this.GetLatestDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestDateCompleted(this, new GetLatestDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/GetLatestDateTimeSeld", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime GetLatestDateTimeSeld() {
            object[] results = this.Invoke("GetLatestDateTimeSeld", new object[0]);
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestDateTimeSeldAsync() {
            this.GetLatestDateTimeSeldAsync(null);
        }
        
        /// <remarks/>
        public void GetLatestDateTimeSeldAsync(object userState) {
            if ((this.GetLatestDateTimeSeldOperationCompleted == null)) {
                this.GetLatestDateTimeSeldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestDateTimeSeldOperationCompleted);
            }
            this.InvokeAsync("GetLatestDateTimeSeld", new object[0], this.GetLatestDateTimeSeldOperationCompleted, userState);
        }
        
        private void OnGetLatestDateTimeSeldOperationCompleted(object arg) {
            if ((this.GetLatestDateTimeSeldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestDateTimeSeldCompleted(this, new GetLatestDateTimeSeldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/GetLatestDateSeld", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLatestDateSeld() {
            object[] results = this.Invoke("GetLatestDateSeld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestDateSeldAsync() {
            this.GetLatestDateSeldAsync(null);
        }
        
        /// <remarks/>
        public void GetLatestDateSeldAsync(object userState) {
            if ((this.GetLatestDateSeldOperationCompleted == null)) {
                this.GetLatestDateSeldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestDateSeldOperationCompleted);
            }
            this.InvokeAsync("GetLatestDateSeld", new object[0], this.GetLatestDateSeldOperationCompleted, userState);
        }
        
        private void OnGetLatestDateSeldOperationCompleted(object arg) {
            if ((this.GetLatestDateSeldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestDateSeldCompleted(this, new GetLatestDateSeldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/EnumValutesXML", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode EnumValutesXML(bool Seld) {
            object[] results = this.Invoke("EnumValutesXML", new object[] {
                        Seld});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void EnumValutesXMLAsync(bool Seld) {
            this.EnumValutesXMLAsync(Seld, null);
        }
        
        /// <remarks/>
        public void EnumValutesXMLAsync(bool Seld, object userState) {
            if ((this.EnumValutesXMLOperationCompleted == null)) {
                this.EnumValutesXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnumValutesXMLOperationCompleted);
            }
            this.InvokeAsync("EnumValutesXML", new object[] {
                        Seld}, this.EnumValutesXMLOperationCompleted, userState);
        }
        
        private void OnEnumValutesXMLOperationCompleted(object arg) {
            if ((this.EnumValutesXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnumValutesXMLCompleted(this, new EnumValutesXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/EnumValutes", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EnumValutes(bool Seld) {
            object[] results = this.Invoke("EnumValutes", new object[] {
                        Seld});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EnumValutesAsync(bool Seld) {
            this.EnumValutesAsync(Seld, null);
        }
        
        /// <remarks/>
        public void EnumValutesAsync(bool Seld, object userState) {
            if ((this.EnumValutesOperationCompleted == null)) {
                this.EnumValutesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnumValutesOperationCompleted);
            }
            this.InvokeAsync("EnumValutes", new object[] {
                        Seld}, this.EnumValutesOperationCompleted, userState);
        }
        
        private void OnEnumValutesOperationCompleted(object arg) {
            if ((this.EnumValutesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnumValutesCompleted(this, new EnumValutesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/GetLatestReutersDateTime", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime GetLatestReutersDateTime() {
            object[] results = this.Invoke("GetLatestReutersDateTime", new object[0]);
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestReutersDateTimeAsync() {
            this.GetLatestReutersDateTimeAsync(null);
        }
        
        /// <remarks/>
        public void GetLatestReutersDateTimeAsync(object userState) {
            if ((this.GetLatestReutersDateTimeOperationCompleted == null)) {
                this.GetLatestReutersDateTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestReutersDateTimeOperationCompleted);
            }
            this.InvokeAsync("GetLatestReutersDateTime", new object[0], this.GetLatestReutersDateTimeOperationCompleted, userState);
        }
        
        private void OnGetLatestReutersDateTimeOperationCompleted(object arg) {
            if ((this.GetLatestReutersDateTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestReutersDateTimeCompleted(this, new GetLatestReutersDateTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/EnumReutersValutesXML", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode EnumReutersValutesXML() {
            object[] results = this.Invoke("EnumReutersValutesXML", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void EnumReutersValutesXMLAsync() {
            this.EnumReutersValutesXMLAsync(null);
        }
        
        /// <remarks/>
        public void EnumReutersValutesXMLAsync(object userState) {
            if ((this.EnumReutersValutesXMLOperationCompleted == null)) {
                this.EnumReutersValutesXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnumReutersValutesXMLOperationCompleted);
            }
            this.InvokeAsync("EnumReutersValutesXML", new object[0], this.EnumReutersValutesXMLOperationCompleted, userState);
        }
        
        private void OnEnumReutersValutesXMLOperationCompleted(object arg) {
            if ((this.EnumReutersValutesXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnumReutersValutesXMLCompleted(this, new EnumReutersValutesXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/EnumReutersValutes", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EnumReutersValutes() {
            object[] results = this.Invoke("EnumReutersValutes", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EnumReutersValutesAsync() {
            this.EnumReutersValutesAsync(null);
        }
        
        /// <remarks/>
        public void EnumReutersValutesAsync(object userState) {
            if ((this.EnumReutersValutesOperationCompleted == null)) {
                this.EnumReutersValutesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnumReutersValutesOperationCompleted);
            }
            this.InvokeAsync("EnumReutersValutes", new object[0], this.EnumReutersValutesOperationCompleted, userState);
        }
        
        private void OnEnumReutersValutesOperationCompleted(object arg) {
            if ((this.EnumReutersValutesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnumReutersValutesCompleted(this, new EnumReutersValutesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/GetReutersCursOnDateXML", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetReutersCursOnDateXML(System.DateTime On_date) {
            object[] results = this.Invoke("GetReutersCursOnDateXML", new object[] {
                        On_date});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetReutersCursOnDateXMLAsync(System.DateTime On_date) {
            this.GetReutersCursOnDateXMLAsync(On_date, null);
        }
        
        /// <remarks/>
        public void GetReutersCursOnDateXMLAsync(System.DateTime On_date, object userState) {
            if ((this.GetReutersCursOnDateXMLOperationCompleted == null)) {
                this.GetReutersCursOnDateXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReutersCursOnDateXMLOperationCompleted);
            }
            this.InvokeAsync("GetReutersCursOnDateXML", new object[] {
                        On_date}, this.GetReutersCursOnDateXMLOperationCompleted, userState);
        }
        
        private void OnGetReutersCursOnDateXMLOperationCompleted(object arg) {
            if ((this.GetReutersCursOnDateXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReutersCursOnDateXMLCompleted(this, new GetReutersCursOnDateXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/GetReutersCursOnDate", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetReutersCursOnDate(System.DateTime On_date) {
            object[] results = this.Invoke("GetReutersCursOnDate", new object[] {
                        On_date});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetReutersCursOnDateAsync(System.DateTime On_date) {
            this.GetReutersCursOnDateAsync(On_date, null);
        }
        
        /// <remarks/>
        public void GetReutersCursOnDateAsync(System.DateTime On_date, object userState) {
            if ((this.GetReutersCursOnDateOperationCompleted == null)) {
                this.GetReutersCursOnDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReutersCursOnDateOperationCompleted);
            }
            this.InvokeAsync("GetReutersCursOnDate", new object[] {
                        On_date}, this.GetReutersCursOnDateOperationCompleted, userState);
        }
        
        private void OnGetReutersCursOnDateOperationCompleted(object arg) {
            if ((this.GetReutersCursOnDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReutersCursOnDateCompleted(this, new GetReutersCursOnDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/GetReutersCursDynamicXML", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetReutersCursDynamicXML(System.DateTime FromDate, System.DateTime ToDate, int NumCode) {
            object[] results = this.Invoke("GetReutersCursDynamicXML", new object[] {
                        FromDate,
                        ToDate,
                        NumCode});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetReutersCursDynamicXMLAsync(System.DateTime FromDate, System.DateTime ToDate, int NumCode) {
            this.GetReutersCursDynamicXMLAsync(FromDate, ToDate, NumCode, null);
        }
        
        /// <remarks/>
        public void GetReutersCursDynamicXMLAsync(System.DateTime FromDate, System.DateTime ToDate, int NumCode, object userState) {
            if ((this.GetReutersCursDynamicXMLOperationCompleted == null)) {
                this.GetReutersCursDynamicXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReutersCursDynamicXMLOperationCompleted);
            }
            this.InvokeAsync("GetReutersCursDynamicXML", new object[] {
                        FromDate,
                        ToDate,
                        NumCode}, this.GetReutersCursDynamicXMLOperationCompleted, userState);
        }
        
        private void OnGetReutersCursDynamicXMLOperationCompleted(object arg) {
            if ((this.GetReutersCursDynamicXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReutersCursDynamicXMLCompleted(this, new GetReutersCursDynamicXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/GetReutersCursDynamic", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetReutersCursDynamic(System.DateTime FromDate, System.DateTime ToDate, int NumCode) {
            object[] results = this.Invoke("GetReutersCursDynamic", new object[] {
                        FromDate,
                        ToDate,
                        NumCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetReutersCursDynamicAsync(System.DateTime FromDate, System.DateTime ToDate, int NumCode) {
            this.GetReutersCursDynamicAsync(FromDate, ToDate, NumCode, null);
        }
        
        /// <remarks/>
        public void GetReutersCursDynamicAsync(System.DateTime FromDate, System.DateTime ToDate, int NumCode, object userState) {
            if ((this.GetReutersCursDynamicOperationCompleted == null)) {
                this.GetReutersCursDynamicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReutersCursDynamicOperationCompleted);
            }
            this.InvokeAsync("GetReutersCursDynamic", new object[] {
                        FromDate,
                        ToDate,
                        NumCode}, this.GetReutersCursDynamicOperationCompleted, userState);
        }
        
        private void OnGetReutersCursDynamicOperationCompleted(object arg) {
            if ((this.GetReutersCursDynamicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReutersCursDynamicCompleted(this, new GetReutersCursDynamicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/GetCursDynamicXML", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetCursDynamicXML(System.DateTime FromDate, System.DateTime ToDate, string ValutaCode) {
            object[] results = this.Invoke("GetCursDynamicXML", new object[] {
                        FromDate,
                        ToDate,
                        ValutaCode});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetCursDynamicXMLAsync(System.DateTime FromDate, System.DateTime ToDate, string ValutaCode) {
            this.GetCursDynamicXMLAsync(FromDate, ToDate, ValutaCode, null);
        }
        
        /// <remarks/>
        public void GetCursDynamicXMLAsync(System.DateTime FromDate, System.DateTime ToDate, string ValutaCode, object userState) {
            if ((this.GetCursDynamicXMLOperationCompleted == null)) {
                this.GetCursDynamicXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCursDynamicXMLOperationCompleted);
            }
            this.InvokeAsync("GetCursDynamicXML", new object[] {
                        FromDate,
                        ToDate,
                        ValutaCode}, this.GetCursDynamicXMLOperationCompleted, userState);
        }
        
        private void OnGetCursDynamicXMLOperationCompleted(object arg) {
            if ((this.GetCursDynamicXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCursDynamicXMLCompleted(this, new GetCursDynamicXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/GetCursDynamic", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCursDynamic(System.DateTime FromDate, System.DateTime ToDate, string ValutaCode) {
            object[] results = this.Invoke("GetCursDynamic", new object[] {
                        FromDate,
                        ToDate,
                        ValutaCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCursDynamicAsync(System.DateTime FromDate, System.DateTime ToDate, string ValutaCode) {
            this.GetCursDynamicAsync(FromDate, ToDate, ValutaCode, null);
        }
        
        /// <remarks/>
        public void GetCursDynamicAsync(System.DateTime FromDate, System.DateTime ToDate, string ValutaCode, object userState) {
            if ((this.GetCursDynamicOperationCompleted == null)) {
                this.GetCursDynamicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCursDynamicOperationCompleted);
            }
            this.InvokeAsync("GetCursDynamic", new object[] {
                        FromDate,
                        ToDate,
                        ValutaCode}, this.GetCursDynamicOperationCompleted, userState);
        }
        
        private void OnGetCursDynamicOperationCompleted(object arg) {
            if ((this.GetCursDynamicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCursDynamicCompleted(this, new GetCursDynamicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/GetCursOnDateXML", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetCursOnDateXML(System.DateTime On_date) {
            object[] results = this.Invoke("GetCursOnDateXML", new object[] {
                        On_date});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetCursOnDateXMLAsync(System.DateTime On_date) {
            this.GetCursOnDateXMLAsync(On_date, null);
        }
        
        /// <remarks/>
        public void GetCursOnDateXMLAsync(System.DateTime On_date, object userState) {
            if ((this.GetCursOnDateXMLOperationCompleted == null)) {
                this.GetCursOnDateXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCursOnDateXMLOperationCompleted);
            }
            this.InvokeAsync("GetCursOnDateXML", new object[] {
                        On_date}, this.GetCursOnDateXMLOperationCompleted, userState);
        }
        
        private void OnGetCursOnDateXMLOperationCompleted(object arg) {
            if ((this.GetCursOnDateXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCursOnDateXMLCompleted(this, new GetCursOnDateXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/GetSeldCursOnDateXML", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetSeldCursOnDateXML(System.DateTime On_date) {
            object[] results = this.Invoke("GetSeldCursOnDateXML", new object[] {
                        On_date});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetSeldCursOnDateXMLAsync(System.DateTime On_date) {
            this.GetSeldCursOnDateXMLAsync(On_date, null);
        }
        
        /// <remarks/>
        public void GetSeldCursOnDateXMLAsync(System.DateTime On_date, object userState) {
            if ((this.GetSeldCursOnDateXMLOperationCompleted == null)) {
                this.GetSeldCursOnDateXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSeldCursOnDateXMLOperationCompleted);
            }
            this.InvokeAsync("GetSeldCursOnDateXML", new object[] {
                        On_date}, this.GetSeldCursOnDateXMLOperationCompleted, userState);
        }
        
        private void OnGetSeldCursOnDateXMLOperationCompleted(object arg) {
            if ((this.GetSeldCursOnDateXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSeldCursOnDateXMLCompleted(this, new GetSeldCursOnDateXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/GetSeldCursOnDate", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSeldCursOnDate(System.DateTime On_date) {
            object[] results = this.Invoke("GetSeldCursOnDate", new object[] {
                        On_date});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSeldCursOnDateAsync(System.DateTime On_date) {
            this.GetSeldCursOnDateAsync(On_date, null);
        }
        
        /// <remarks/>
        public void GetSeldCursOnDateAsync(System.DateTime On_date, object userState) {
            if ((this.GetSeldCursOnDateOperationCompleted == null)) {
                this.GetSeldCursOnDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSeldCursOnDateOperationCompleted);
            }
            this.InvokeAsync("GetSeldCursOnDate", new object[] {
                        On_date}, this.GetSeldCursOnDateOperationCompleted, userState);
        }
        
        private void OnGetSeldCursOnDateOperationCompleted(object arg) {
            if ((this.GetSeldCursOnDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSeldCursOnDateCompleted(this, new GetSeldCursOnDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/GetCursOnDate", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCursOnDate(System.DateTime On_date) {
            object[] results = this.Invoke("GetCursOnDate", new object[] {
                        On_date});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCursOnDateAsync(System.DateTime On_date) {
            this.GetCursOnDateAsync(On_date, null);
        }
        
        /// <remarks/>
        public void GetCursOnDateAsync(System.DateTime On_date, object userState) {
            if ((this.GetCursOnDateOperationCompleted == null)) {
                this.GetCursOnDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCursOnDateOperationCompleted);
            }
            this.InvokeAsync("GetCursOnDate", new object[] {
                        On_date}, this.GetCursOnDateOperationCompleted, userState);
        }
        
        private void OnGetCursOnDateOperationCompleted(object arg) {
            if ((this.GetCursOnDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCursOnDateCompleted(this, new GetCursOnDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SaldoXMLCompletedEventHandler(object sender, SaldoXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaldoXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaldoXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ROISfixXMLCompletedEventHandler(object sender, ROISfixXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ROISfixXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ROISfixXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void RuoniaXMLCompletedEventHandler(object sender, RuoniaXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RuoniaXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RuoniaXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void OstatDepoXMLCompletedEventHandler(object sender, OstatDepoXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OstatDepoXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OstatDepoXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ValIntDayXMLCompletedEventHandler(object sender, ValIntDayXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValIntDayXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValIntDayXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ValIntDayCompletedEventHandler(object sender, ValIntDayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValIntDayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValIntDayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void OstatDepoCompletedEventHandler(object sender, OstatDepoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OstatDepoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OstatDepoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ROISfixCompletedEventHandler(object sender, ROISfixCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ROISfixCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ROISfixCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void RuoniaCompletedEventHandler(object sender, RuoniaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RuoniaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RuoniaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void mrrf7DCompletedEventHandler(object sender, mrrf7DCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class mrrf7DCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal mrrf7DCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void mrrf7DXMLCompletedEventHandler(object sender, mrrf7DXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class mrrf7DXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal mrrf7DXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void RepoDebtUSDCompletedEventHandler(object sender, RepoDebtUSDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RepoDebtUSDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RepoDebtUSDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void RepoDebtUSDXMLCompletedEventHandler(object sender, RepoDebtUSDXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RepoDebtUSDXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RepoDebtUSDXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void mrrfCompletedEventHandler(object sender, mrrfCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class mrrfCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal mrrfCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void mrrfXMLCompletedEventHandler(object sender, mrrfXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class mrrfXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal mrrfXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SaldoCompletedEventHandler(object sender, SaldoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaldoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaldoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void NewsInfoXMLCompletedEventHandler(object sender, NewsInfoXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewsInfoXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewsInfoXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void OmodInfoXMLCompletedEventHandler(object sender, OmodInfoXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OmodInfoXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OmodInfoXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void XVolCompletedEventHandler(object sender, XVolCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class XVolCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal XVolCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void XVolXMLCompletedEventHandler(object sender, XVolXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class XVolXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal XVolXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void MainInfoXMLCompletedEventHandler(object sender, MainInfoXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MainInfoXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MainInfoXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AllDataInfoXMLCompletedEventHandler(object sender, AllDataInfoXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AllDataInfoXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AllDataInfoXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void NewsInfoCompletedEventHandler(object sender, NewsInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewsInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewsInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SwapDayTotalCompletedEventHandler(object sender, SwapDayTotalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SwapDayTotalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SwapDayTotalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SwapDayTotalXMLCompletedEventHandler(object sender, SwapDayTotalXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SwapDayTotalXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SwapDayTotalXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SwapDynamicXMLCompletedEventHandler(object sender, SwapDynamicXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SwapDynamicXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SwapDynamicXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SwapInfoSellUSDVolXMLCompletedEventHandler(object sender, SwapInfoSellUSDVolXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SwapInfoSellUSDVolXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SwapInfoSellUSDVolXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SwapInfoSellUSDVolCompletedEventHandler(object sender, SwapInfoSellUSDVolCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SwapInfoSellUSDVolCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SwapInfoSellUSDVolCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SwapInfoSellUSDCompletedEventHandler(object sender, SwapInfoSellUSDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SwapInfoSellUSDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SwapInfoSellUSDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SwapInfoSellUSDXMLCompletedEventHandler(object sender, SwapInfoSellUSDXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SwapInfoSellUSDXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SwapInfoSellUSDXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void BiCurBaseXMLCompletedEventHandler(object sender, BiCurBaseXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BiCurBaseXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BiCurBaseXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void BiCurBaseCompletedEventHandler(object sender, BiCurBaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BiCurBaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BiCurBaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void BiCurBacketXMLCompletedEventHandler(object sender, BiCurBacketXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BiCurBacketXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BiCurBacketXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void BiCurBacketCompletedEventHandler(object sender, BiCurBacketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BiCurBacketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BiCurBacketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SwapDynamicCompletedEventHandler(object sender, SwapDynamicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SwapDynamicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SwapDynamicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SwapMonthTotalCompletedEventHandler(object sender, SwapMonthTotalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SwapMonthTotalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SwapMonthTotalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SwapMonthTotalXMLCompletedEventHandler(object sender, SwapMonthTotalXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SwapMonthTotalXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SwapMonthTotalXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void MKRCompletedEventHandler(object sender, MKRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MKRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MKRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void MKRXMLCompletedEventHandler(object sender, MKRXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MKRXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MKRXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void KeyRateCompletedEventHandler(object sender, KeyRateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class KeyRateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal KeyRateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void KeyRateXMLCompletedEventHandler(object sender, KeyRateXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class KeyRateXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal KeyRateXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DVCompletedEventHandler(object sender, DVCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DVCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DVCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DVXMLCompletedEventHandler(object sender, DVXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DVXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DVXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void Repo_debtCompletedEventHandler(object sender, Repo_debtCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Repo_debtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Repo_debtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void Repo_debtXMLCompletedEventHandler(object sender, Repo_debtXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Repo_debtXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Repo_debtXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void Coins_baseCompletedEventHandler(object sender, Coins_baseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Coins_baseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Coins_baseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void Coins_baseXMLCompletedEventHandler(object sender, Coins_baseXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Coins_baseXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Coins_baseXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FixingBaseCompletedEventHandler(object sender, FixingBaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FixingBaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FixingBaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FixingBaseXMLCompletedEventHandler(object sender, FixingBaseXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FixingBaseXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FixingBaseXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void OvernightCompletedEventHandler(object sender, OvernightCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OvernightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OvernightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void OvernightXMLCompletedEventHandler(object sender, OvernightXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OvernightXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OvernightXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void BauctionCompletedEventHandler(object sender, BauctionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BauctionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BauctionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void BauctionXMLCompletedEventHandler(object sender, BauctionXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BauctionXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BauctionXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DepoDynamicXMLCompletedEventHandler(object sender, DepoDynamicXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DepoDynamicXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DepoDynamicXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DepoDynamicCompletedEventHandler(object sender, DepoDynamicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DepoDynamicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DepoDynamicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void OstatDynamicXMLCompletedEventHandler(object sender, OstatDynamicXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OstatDynamicXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OstatDynamicXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void OstatDynamicCompletedEventHandler(object sender, OstatDynamicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OstatDynamicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OstatDynamicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DragMetDynamicXMLCompletedEventHandler(object sender, DragMetDynamicXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DragMetDynamicXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DragMetDynamicXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DragMetDynamicCompletedEventHandler(object sender, DragMetDynamicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DragMetDynamicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DragMetDynamicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetLatestDateTimeCompletedEventHandler(object sender, GetLatestDateTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestDateTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestDateTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetLatestDateCompletedEventHandler(object sender, GetLatestDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetLatestDateTimeSeldCompletedEventHandler(object sender, GetLatestDateTimeSeldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestDateTimeSeldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestDateTimeSeldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetLatestDateSeldCompletedEventHandler(object sender, GetLatestDateSeldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestDateSeldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestDateSeldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EnumValutesXMLCompletedEventHandler(object sender, EnumValutesXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnumValutesXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnumValutesXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EnumValutesCompletedEventHandler(object sender, EnumValutesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnumValutesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnumValutesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetLatestReutersDateTimeCompletedEventHandler(object sender, GetLatestReutersDateTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestReutersDateTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestReutersDateTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EnumReutersValutesXMLCompletedEventHandler(object sender, EnumReutersValutesXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnumReutersValutesXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnumReutersValutesXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EnumReutersValutesCompletedEventHandler(object sender, EnumReutersValutesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnumReutersValutesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnumReutersValutesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetReutersCursOnDateXMLCompletedEventHandler(object sender, GetReutersCursOnDateXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReutersCursOnDateXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReutersCursOnDateXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetReutersCursOnDateCompletedEventHandler(object sender, GetReutersCursOnDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReutersCursOnDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReutersCursOnDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetReutersCursDynamicXMLCompletedEventHandler(object sender, GetReutersCursDynamicXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReutersCursDynamicXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReutersCursDynamicXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetReutersCursDynamicCompletedEventHandler(object sender, GetReutersCursDynamicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReutersCursDynamicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReutersCursDynamicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetCursDynamicXMLCompletedEventHandler(object sender, GetCursDynamicXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCursDynamicXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCursDynamicXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetCursDynamicCompletedEventHandler(object sender, GetCursDynamicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCursDynamicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCursDynamicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetCursOnDateXMLCompletedEventHandler(object sender, GetCursOnDateXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCursOnDateXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCursOnDateXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetSeldCursOnDateXMLCompletedEventHandler(object sender, GetSeldCursOnDateXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSeldCursOnDateXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSeldCursOnDateXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetSeldCursOnDateCompletedEventHandler(object sender, GetSeldCursOnDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSeldCursOnDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSeldCursOnDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetCursOnDateCompletedEventHandler(object sender, GetCursOnDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCursOnDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCursOnDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591